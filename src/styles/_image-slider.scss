@use "sass:map";
@use "variables" as *;
@use "mixins" as *;

.image-container {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: map.get($colors, background, secondary);

  .image-loading {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    @include flex-center;
    background-color: rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(4px);
    z-index: 2;

    &::after {
      content: '';
      width: 48px;
      height: 48px;
      border: 4px solid rgba(0, 0, 0, 0.1);
      border-top-color: rgba(0, 0, 0, 0.8);
      border-radius: 50%;
      animation: spin 0.8s linear infinite;
    }
  }

  .image-error {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    @include flex-center;
    flex-direction: column;
    gap: map.get($spacing, md);
    background-color: map.get($colors, background, secondary);
    color: map.get($colors, error);
    z-index: 2;
    padding: map.get($spacing, md);
    text-align: center;

    span {
      font-size: 16px;
      font-weight: 500;
    }

    .retry-button {
      padding: map.get($spacing, xs) map.get($spacing, md);
      background-color: map.get($colors, error);
      color: white;
      border: none;
      border-radius: map.get($border-radius, sm);
      cursor: pointer;
      transition: all map.get($transitions, fast) ease-in-out;

      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 2px 8px rgba(map.get($colors, error), 0.3);
      }

      &:active {
        transform: translateY(0);
      }
    }
  }
}

.slider-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: all map.get($transitions, medium) ease-in-out;
  
  &.loading {
    opacity: 0;
  }
  
  &.loaded {
    opacity: 1;
  }
}

.image-slider {
  position: relative;
  width: 100%;
  aspect-ratio: 16/9;
  overflow: hidden;
  border-radius: map.get($border-radius, md);
  margin-bottom: map.get($spacing, md);

  .slider-control {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 2;
    opacity: 0;
    transition: all map.get($transitions, fast) ease-in-out;
    background-color: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(4px);
    border-radius: 50%;
    width: 36px;
    height: 36px;
    @include flex-center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    cursor: pointer;
    border: none;
    color: map.get($colors, text, primary);

    &:hover {
      background-color: white;
      transform: translateY(-50%) scale(1.1);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    &:active {
      transform: translateY(-50%) scale(0.95);
    }

    svg {
      width: 20px;
      height: 20px;
      fill: currentColor;
    }
  }

  &:hover .slider-control {
    opacity: 1;
  }

  .prev-button {
    left: map.get($spacing, md);
  }

  .next-button {
    right: map.get($spacing, md);
  }

  .slider-indicator {
    position: absolute;
    bottom: map.get($spacing, md);
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: map.get($spacing, sm);
    z-index: 2;
    padding: map.get($spacing, xs) map.get($spacing, sm);
    background-color: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(4px);
    border-radius: map.get($border-radius, xl);
    max-width: 80%;
    overflow-x: auto;
    scrollbar-width: none; // Firefox
    -ms-overflow-style: none; // IE and Edge
    
    // Hide scrollbar for Chrome, Safari, and Opera
    &::-webkit-scrollbar {
      display: none;
    }

    // Container for dots
    .dots-container {
      display: flex;
      gap: map.get($spacing, sm);
      padding: 2px; // To avoid cutting off the scale effect on hover
    }

    .indicator-dot {
      width: 6px;
      height: 6px;
      min-width: 6px; // Prevents dots from compressing
      border-radius: 50%;
      background-color: rgba(255, 255, 255, 0.5);
      cursor: pointer;
      transition: all map.get($transitions, fast) ease-in-out;
      border: 2px solid transparent;
      padding: 0; // Remove inner padding for button

      &:hover {
        background-color: rgba(255, 255, 255, 0.8);
        transform: scale(1.2);
      }

      &.active {
        background-color: white;
        transform: scale(1.2);
        border-color: rgba(255, 255, 255, 0.3);
      }
    }
  }

  .new-building-badge {
    position: absolute;
    top: map.get($spacing, sm);
    left: map.get($spacing, sm);
    background-color: map.get($colors, primary);
    color: white;
    padding: map.get($spacing, xs) map.get($spacing, sm);
    border-radius: map.get($border-radius, xl);
    font-size: 14px;
    font-weight: 600;
    z-index: 1;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .favorite-button {
    position: absolute;
    top: map.get($spacing, sm);
    right: map.get($spacing, sm);
    z-index: 1;
    background-color: white;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    @include flex-center;
    transition: all map.get($transitions, fast) ease-in-out;
    cursor: pointer;
    border: none;

    &:hover {
      transform: scale(1.1);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    &.active {
      background-color: map.get($colors, accent);
      color: white;
    }
  }
}