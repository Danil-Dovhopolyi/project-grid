@use "sass:map";

$colors: (
  primary: #006d77,
  accent: #ff6b6b,
  text: (
    primary: #2d3436,
    secondary: #636e72,
    light: #b2bec3
  ),
  background: (
    primary: white,
    secondary: #f8f9fa,
    hover: rgba(0, 0, 0, 0.05)
  ),
  border: #e9ecef,
  error: #d32f2f
);

$spacing: (
  xs: 4px,
  sm: 8px,
  md: 16px,
  lg: 24px,
  xl: 40px
);

$breakpoints: (
  sm: 768px,
  md: 1024px
);

$border-radius: (
  sm: 4px,
  md: 8px,
  lg: 12px,
  xl: 20px
);

$transitions: (
  fast: 0.2s,
  medium: 0.3s,
  slow: 0.5s
);

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin responsive($breakpoint) {
  @media (max-width: map.get($breakpoints, $breakpoint)) {
    @content;
  }
}

@mixin card-hover {
  transition: all map.get($transitions, medium) ease-in-out;
  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  }
}

@mixin skeleton-loading {
  background: linear-gradient(
    90deg,
    map.get($colors, background, secondary) 25%,
    map.get($colors, background, primary) 50%,
    map.get($colors, background, secondary) 75%
  );
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
}

@keyframes loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

.project-grid-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: map.get($spacing, md);
}

.project-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: map.get($spacing, lg);

  @include responsive('md') {
    grid-template-columns: repeat(2, 1fr);
  }

  @include responsive('sm') {
    grid-template-columns: 1fr;
  }
}

.project-card {
  border-radius: map.get($border-radius, lg);
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  background-color: map.get($colors, background, primary);
  @include card-hover;
  cursor: pointer;
  display: flex;
  flex-direction: column;
  height: 100%;
  padding: map.get($spacing, md);

  &:active {
    transform: translateY(-2px);
  }
}

.image-container {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: map.get($colors, background, secondary);

  .image-loading {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    @include flex-center;
    background-color: rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(4px);
    z-index: 2;

    &::after {
      content: '';
      width: 48px;
      height: 48px;
      border: 4px solid rgba(0, 0, 0, 0.1);
      border-top-color: rgba(0, 0, 0, 0.8);
      border-radius: 50%;
      animation: spin 0.8s linear infinite;
    }
  }

  .image-error {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    @include flex-center;
    flex-direction: column;
    gap: map.get($spacing, md);
    background-color: map.get($colors, background, secondary);
    color: map.get($colors, error);
    z-index: 2;
    padding: map.get($spacing, md);
    text-align: center;

    span {
      font-size: 16px;
      font-weight: 500;
    }

    .retry-button {
      padding: map.get($spacing, xs) map.get($spacing, md);
      background-color: map.get($colors, error);
      color: white;
      border: none;
      border-radius: map.get($border-radius, sm);
      cursor: pointer;
      transition: all map.get($transitions, fast) ease-in-out;

      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 2px 8px rgba(map.get($colors, error), 0.3);
      }

      &:active {
        transform: translateY(0);
      }
    }
  }
}

.slider-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: all map.get($transitions, medium) ease-in-out;
  
  &.loading {
    opacity: 0;
  }
  
  &.loaded {
    opacity: 1;
  }
}

.image-slider {
  position: relative;
  width: 100%;
  aspect-ratio: 16/9;
  overflow: hidden;
  border-radius: map.get($border-radius, md);
  margin-bottom: map.get($spacing, md);

  .slider-control {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 2;
    opacity: 0;
    transition: all map.get($transitions, fast) ease-in-out;
    background-color: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(4px);
    border-radius: 50%;
    width: 36px;
    height: 36px;
    @include flex-center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    cursor: pointer;
    border: none;
    color: map.get($colors, text, primary);

    &:hover {
      background-color: white;
      transform: translateY(-50%) scale(1.1);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    &:active {
      transform: translateY(-50%) scale(0.95);
    }

    svg {
      width: 20px;
      height: 20px;
      fill: currentColor;
    }
  }

  &:hover .slider-control {
    opacity: 1;
  }

  .prev-button {
    left: map.get($spacing, md);
  }

  .next-button {
    right: map.get($spacing, md);
  }

  .slider-indicator {
    position: absolute;
    bottom: map.get($spacing, md);
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: map.get($spacing, sm);
    z-index: 2;
    padding: map.get($spacing, xs) map.get($spacing, sm);
    background-color: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(4px);
    border-radius: map.get($border-radius, xl);
    max-width: 80%;
    overflow-x: auto;
    scrollbar-width: none; // Firefox
    -ms-overflow-style: none; // IE and Edge
    
    // Приховуємо скролбар для Chrome, Safari та Opera
    &::-webkit-scrollbar {
      display: none;
    }

    // Контейнер для точок
    .dots-container {
      display: flex;
      gap: map.get($spacing, sm);
      padding: 2px; // Щоб не обрізався ефект scale при ховері
    }

    .indicator-dot {
      width: 6px;
      height: 6px;
      min-width: 6px; // Запобігає стисканню точок
      border-radius: 50%;
      background-color: rgba(255, 255, 255, 0.5);
      cursor: pointer;
      transition: all map.get($transitions, fast) ease-in-out;
      border: 2px solid transparent;
      padding: 0; // Прибираємо внутрішні відступи для кнопки

      &:hover {
        background-color: rgba(255, 255, 255, 0.8);
        transform: scale(1.2);
      }

      &.active {
        background-color: white;
        transform: scale(1.2);
        border-color: rgba(255, 255, 255, 0.3);
      }
    }
  }

  .new-building-badge {
    position: absolute;
    top: map.get($spacing, sm);
    left: map.get($spacing, sm);
    background-color: map.get($colors, primary);
    color: white;
    padding: map.get($spacing, xs) map.get($spacing, sm);
    border-radius: map.get($border-radius, xl);
    font-size: 14px;
    font-weight: 600;
    z-index: 1;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .favorite-button {
    position: absolute;
    top: map.get($spacing, sm);
    right: map.get($spacing, sm);
    z-index: 1;
    background-color: white;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    @include flex-center;
    transition: all map.get($transitions, fast) ease-in-out;
    cursor: pointer;
    border: none;


    &:hover {
      transform: scale(1.1);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    &.active {
      background-color: map.get($colors, accent);
      color: white;
    }
  }
}

.card-content {
  display: flex;
  flex-direction: column;
  flex-grow: 1;

  .content-top {
    margin-bottom: map.get($spacing, lg);
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: flex-start;
    gap: map.get($spacing, xs);
  }

  .project-title {
    font-size: 24px;
    font-weight: 600;
    color: map.get($colors, text, primary);
    margin: 0;
    flex: 1;
    min-width: 200px;
  }

  .project-price {
    font-size: 24px;
    font-weight: 700;
    color: map.get($colors, accent);
    margin: 0;
    text-align: right;
  }

  .project-address {
    width: 100%;
    @include flex-center;
    justify-content: flex-start;
    gap: map.get($spacing, xs);
    color: map.get($colors, text, secondary);
    font-size: 16px;
    margin-top: map.get($spacing, sm);
  }

  .project-details {
    display: flex;
    justify-content: flex-start;
    gap: map.get($spacing, xl);
    margin-top: auto;

    .detail-item {
      @include flex-center;
      gap: map.get($spacing, xs);
      color: map.get($colors, text, light);
      font-size: 16px;
      position: relative;

      &:not(:last-child)::after {
        content: '';
        position: absolute;
        right: calc(-#{map.get($spacing, xl)} / 2);
        height: 100%;
        width: 1px;
        background-color: map.get($colors, border);
      }
    }
  }
}

.pagination {
  @include flex-center;
  gap: map.get($spacing, sm);
  margin-top: map.get($spacing, lg);

  button {
    transition: all map.get($transitions, fast) ease-in-out;
    
    &:hover:not(:disabled) {
      transform: translateY(-2px);
    }
    
    &:active:not(:disabled) {
      transform: translateY(0);
    }
  }
}

.pagination-ellipsis {
  color: map.get($colors, text, secondary);
  padding: 0 map.get($spacing, sm);
}

.loading {
  text-align: center;
  padding: map.get($spacing, xl);
  font-size: 18px;
  color: map.get($colors, text, secondary);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: map.get($spacing, md);

  &::after {
    content: '';
    width: 40px;
    height: 40px;
    border: 3px solid map.get($colors, background, secondary);
    border-top-color: map.get($colors, primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.error-message {
  background-color: #fff3f3;
  border: 1px solid map.get($colors, error);
  color: map.get($colors, error);
  padding: map.get($spacing, md);
  border-radius: map.get($border-radius, md);
  margin: map.get($spacing, md) 0;
  text-align: center;
  animation: slideIn map.get($transitions, medium) ease-out;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: map.get($spacing, sm);

  &::before {
    content: '⚠️';
    font-size: 1.2em;
  }
}

@keyframes slideIn {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

// Utility class for screen readers
.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

// Focus styles
.project-card:focus-within {
    outline: 2px solid map.get($colors, primary);
    outline-offset: 2px;
}

.image-slider:focus {
    outline: 2px solid map.get($colors, primary);
    outline-offset: 2px;
}

.button:focus-visible {
    outline: 2px solid map.get($colors, primary);
    outline-offset: 2px;
    box-shadow: 0 0 0 4px rgba(map.get($colors, primary), 0.2);
}

// High contrast mode support
@media (forced-colors: active) {
    .project-card {
        border: 1px solid CanvasText;
    }

    .button {
        border: 1px solid ButtonText;
    }

    .indicator-dot.active {
        background-color: Highlight;
    }
} 